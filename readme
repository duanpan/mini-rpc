1、--消费者注入代理重复bean复用。
2、--HTTP连接池封装
3、--类型转换完善
4、--元数据信息（命名空间、协议、环境、接口版本）隔离
5、不依赖于spring注入bean
6、日志对性能的影响
7、--增加过滤器
8、增加mock工具[各种数据类型处理][在代理生成时替代代理bean实现，通过过滤器实现]
9、--异常处理，provider,consumer [技术类异常，业务类异常，未知异常]技术类异常可以尝试重试
10、超时重试机制

11、故障隔离、恢复
   1、几点宕机，多节点+注册中心
   2、偶发性不可用，重试机制
   3、部分接口间断性不可用， 故障隔离
   4、间隔一段时间去探活隔离的接口，故障恢复 [滑动窗口]。

12、灰度发布
     增加route
     根据配置灰度比例
     根据用户
     根据请求标记灰度参数，流量染色
     dubbo group 隔离

13、优化
   增加enableMiniRpc注解， 通过import来初始化配置对象
   context 通过bean的方式创建

14、限流[12]



==========配置中心
1、配置中心实现原理(13)



shardiingshere  影子库
把githu项目同步到maven中央仓库【12】